generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  username    String    @unique
  test        Test[]
  pcp         Provider? @relation(fields: [providerId], references: [id])
  age         Int?
  phoneNumber String?
  dob         String
  name        String
  legalName   String?
  mrn         Int?
  providerId  Int?
  sub         String?
}

model Test {
  id                    Int                  @id @default(autoincrement())
  name                  String
  user                  User                 @relation(fields: [userId], references: [id])
  userId                Int
  lab                   Lab?                 @relation(fields: [labId], references: [id])
  labId                 Int?
  orderedBy             Provider?            @relation(fields: [providerId], references: [id])
  providerId            Int
  resultOn              DateTime
  collectedOn           DateTime
  reportedOn            DateTime
  result                Result[]
  resultStatus          String?
  aggregateTestResult   AggregateTestResult? @relation(fields: [aggregateTestResultId], references: [id])
  aggregateTestResultId Int?
}

model Result {
  id            Int     @id @default(autoincrement())
  component     String
  value         String
  unit          String
  standardRange String
  flag          String?
  Test          Test?   @relation(fields: [testId], references: [id])
  testId        Int?
  userId        Int?
}

model AggregateTestResult {
  id   Int    @id @default(autoincrement())
  name String @unique
  test Test[]
  userId Int?
}

model Provider {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User[]
  Test Test[]
  userId Int?
}

model Lab {
  id   Int    @id @default(autoincrement())
  name String @unique
  test Test[]
  userId Int?
}
